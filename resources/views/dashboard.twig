{% extends "layout.twig" %}
{% block content %}
    <div class="px-4 sm:px-6 lg:px-8">
        <div class="container mx-auto p-6"
             x-data='dataGrid({})'
             x-init="eventSource = new EventSource('/dashboard/sse');
            eventSource.addEventListener('realtimeData', function (event) {
                var data = JSON.parse(event.data);
                realtimeData = data.realtimeData.content;
                console.log(realtimeData);
                agents = realtimeData.agents;
                todayCalls = realtimeData.stats.calls_today;
                dropCalls = realtimeData.stats.drop_calls;
                answeredCalls = realtimeData.stats.answers_today;
                dropPercent = realtimeData.stats.drop_percent;
                outGoing = realtimeData.stats.outbound_today;
                inComingCalls = realtimeData.callstatus.active_calls;
                ringingCalls = realtimeData.callstatus.call_ringing;
                waitingForAgents = realtimeData.callstatus.call_waiting;
                ivrCalls = realtimeData.callstatus.call_ivr;
                loggedAgents = realtimeData.callstatus.total_agents;
                agentsInCall = realtimeData.callstatus.agents_in_call;
                agentsWaiting = realtimeData.callstatus.agents_waiting;
            })"
        >
            <div class="grid grid-cols-4 gap-4 mb-6" >
                <div class="bg-blue-500 text-white p-4 rounded shadow-lg">
                    <div class="text-2xl font-bold" x-text="todayCalls" ></div>
                    <div>Calls Today</div>
                </div>
                <div class="bg-green-500 text-white p-4 rounded shadow-lg">
                    <div class="text-2xl font-bold" x-text="answeredCalls"></div>
                    <div>Answered</div>
                </div>
                <div class="bg-red-500 text-white p-4 rounded shadow-lg">
                    <div class="text-2xl font-bold" x-text="dropPercent" >%</div>
                    <div>Dropped</div>
                </div>
                <div class="bg-purple-500 text-white p-4 rounded shadow-lg">
                    <div class="text-2xl font-bold" x-text="outGoing" ></div>
                    <div>Outgoing</div>
                </div>
                <div class="w-64 bg-white p-4 shadow-lg">
                    <div class="text-xl font-bold mb-4">Call Status</div>
                    <ul>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-green-500 rounded-full mr-2"></span> Incoming Calls <span x-text="inComingCalls" class="ml-auto">0</span></li>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-yellow-500 rounded-full mr-2"></span> Calls Ringing <span x-text="ringingCalls" class="ml-auto">0</span></li>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-red-500 rounded-full mr-2"></span> Calls Waiting for Agents <span x-text="waitingForAgents" class="ml-auto">0</span></li>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-blue-500 rounded-full mr-2"></span> Calls in IVR <span x-text="ivrCalls" class="ml-auto">0</span></li>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-green-500 rounded-full mr-2"></span> Agents Logged In <span x-text="loggedAgents" class="ml-auto">0</span></li>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-orange-500 rounded-full mr-2"></span> Agents In Call <span x-text="agentsInCall" class="ml-auto">0</span></li>
                        <li class="flex items-center mb-2"><span class="w-2 h-2 bg-gray-500 rounded-full mr-2"></span> Agents Waiting <span x-text="agentsWaiting" class="ml-auto">0</span></li>
                    </ul>
                </div>
            </div>
            <div class="mb-4 flex justify-between items-center">
                <h2 class="text-2xl font-bold">Agents</h2>
                <input type="text" class="border rounded p-2" placeholder="Search" x-model="searchQuery">
            </div>

            <table class="min-w-full bg-white shadow rounded-lg overflow-hidden">
                <thead class="bg-gray-200">
                <tr>
                    <th class="py-2 px-4 text-left cursor-pointer">Station</th>
                    <th class="py-2 px-4 text-left cursor-pointer">Phone</th>
                    <th class="py-2 px-4 text-left cursor-pointer">User</th>
                    <th class="py-2 px-4 text-left cursor-pointer">Group</th>
                    <th class="py-2 px-4 text-left cursor-pointer">SessionID</th>
                    <th class="py-2 px-4 text-left cursor-pointer" >Status</th>
                    <th class="py-2 px-4 text-left cursor-pointer">CustPhone</th>
                    <th class="py-2 px-4 text-left cursor-pointer">MM:SS</th>
                    <th class="py-2 px-4 text-left cursor-pointer">Campaign</th>
                    <th class="py-2 px-4 text-left cursor-pointer">Calls</th>
                    <th class="py-2 px-4 text-left cursor-pointer">Call Type</th>
                    <th class="py-2 px-4 text-left" >Action</th>
                </tr>
                </thead>
                <tbody>
                <template x-for="agent in filteredAgents" :key="agent.live_agent_id">
                    <tr>
                        <td class="py-2 px-4" x-text="agent.extension"></td>
                        <td class="py-2 px-4" x-text="agent.phone"></td>
                        <td class="py-2 px-4" x-text="agent.user"></td>
                        <td class="py-2 px-4" x-text="agent.userGroup"></td>
                        <td class="py-2 px-4" x-text="agent.sessionid"></td>
                        <td class="py-2 px-4">
                            <span class="p-1 rounded" :class="statusClass(agent.status)" x-text="agent.status"></span>
                        </td>
                        <td class="py-2 px-4" x-text="agent.custPhone"></td>
                        <td class="py-2 px-4" x-text="agent.callTime"></td>
                        <td class="py-2 px-4" x-text="agent.campaignId"></td>
                        <td class="py-2 px-4" x-text="agent.callCount"></td>
                        <td class="py-2 px-4" x-text="agent.callType"></td>
                        <td class="py-2 px-4">
                            <button x-show="agent.status == '3-WAY'" class="bg-blue-500 text-white px-2 py-1 rounded">â–¶</button>
                        </td>
                    </tr>
                </template>
                </tbody>
            </table>
        </div>

        <script>
            function dataGrid() {
                return {
                    searchQuery: '',
                    sortByField: '',
                    sortDesc: false,
                    agents: [],
                    todayCalls: 0,
                    dropCalls: 0,
                    answeredCalls: 0,
                    dropPercent: 0,
                    outGoing: 0,
                    inComingCalls: 0,
                    ringingCalls: 0,
                    waitingForAgents: 0,
                    ivrCalls: 0,
                    loggedAgents: 0,
                    agentsInCall: 0,
                    agentsWaiting: 0,
                    get filteredAgents() {
                        let result = this.agents;
                        if (this.searchQuery) {
                            result = result.filter(agent => Object.values(agent).some(value => value.toString().toLowerCase().includes(this.searchQuery.toLowerCase())));
                        }
                        if (this.sortByField) {
                            result.sort((a, b) => {
                                if (this.sortDesc) {
                                    return a[this.sortByField] > b[this.sortByField] ? -1 : 1;
                                }
                                return a[this.sortByField] < b[this.sortByField] ? -1 : 1;
                            });
                        }
                        return result;
                    },
                    sortBy(field) {
                        if (this.sortByField === field) {
                            this.sortDesc = !this.sortDesc;
                        } else {
                            this.sortByField = field;
                            this.sortDesc = false;
                        }
                    },
                    statusClass(status) {
                        switch (status) {
                            case 'INCALL':
                                return 'bg-green-200 text-green-800';
                            case '3-WAY':
                                return 'bg-yellow-200 text-yellow-800';
                            case 'CLOSER':
                                return 'bg-red-200 text-red-800';
                            default:
                                return 'bg-gray-200 text-gray-800';
                        }
                    }
                }
            }

        </script>
    </div>
{% endblock %}
